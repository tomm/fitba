# typed: strong
# This is an autogenerated file for Rails routes.
# Please run bundle exec rake rails_rbi:routes to regenerate.
class ActionController::Base
  include GeneratedUrlHelpers
end

module ActionView::Helpers
  include GeneratedUrlHelpers
end

class ActionMailer::Base
  include GeneratedUrlHelpers
end

module GeneratedUrlHelpers
  # Sigs for route /login(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def login_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def login_url(*args, **kwargs); end

  # Sigs for route /try_login(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def try_login_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def try_login_url(*args, **kwargs); end

  # Sigs for route /redeem_invite(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def redeem_invite_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def redeem_invite_url(*args, **kwargs); end

  # Sigs for route /save_formation(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def save_formation_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def save_formation_url(*args, **kwargs); end

  # Sigs for route /load_world(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def load_world_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def load_world_url(*args, **kwargs); end

  # Sigs for route /tables(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def tables_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def tables_url(*args, **kwargs); end

  # Sigs for route /fixtures(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def fixtures_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def fixtures_url(*args, **kwargs); end

  # Sigs for route /transfer_listings(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def transfer_listings_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def transfer_listings_url(*args, **kwargs); end

  # Sigs for route /news_articles(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def news_articles_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def news_articles_url(*args, **kwargs); end

  # Sigs for route /top_scorers(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def top_scorers_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def top_scorers_url(*args, **kwargs); end

  # Sigs for route /transfer_bid(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def transfer_bid_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def transfer_bid_url(*args, **kwargs); end

  # Sigs for route /sell_player(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def sell_player_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def sell_player_url(*args, **kwargs); end

  # Sigs for route /delete_message(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def delete_message_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def delete_message_url(*args, **kwargs); end

  # Sigs for route /got_fcm_token(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def got_fcm_token_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def got_fcm_token_url(*args, **kwargs); end

  # Sigs for route /squad(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def squad_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def squad_url(*args, **kwargs); end

  # Sigs for route /get_game(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def get_game_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def get_game_url(*args, **kwargs); end

  # Sigs for route /game_events_since(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def game_events_since_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def game_events_since_url(*args, **kwargs); end

  # Sigs for route /history(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def history_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def history_url(*args, **kwargs); end

  # Sigs for route /finances(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def finances_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def finances_url(*args, **kwargs); end

  # Sigs for route /rails/active_storage/blobs/:signed_id/*filename(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_service_blob_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_service_blob_url(*args, **kwargs); end

  # Sigs for route /rails/active_storage/representations/:signed_blob_id/:variation_key/*filename(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_blob_representation_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_blob_representation_url(*args, **kwargs); end

  # Sigs for route /rails/active_storage/disk/:encoded_key/*filename(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_disk_service_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_disk_service_url(*args, **kwargs); end

  # Sigs for route /rails/active_storage/disk/:encoded_token(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def update_rails_disk_service_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def update_rails_disk_service_url(*args, **kwargs); end

  # Sigs for route /rails/active_storage/direct_uploads(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_direct_uploads_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_direct_uploads_url(*args, **kwargs); end
end
